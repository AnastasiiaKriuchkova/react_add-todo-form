{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/utils/generateNewId.ts","components/utils/getUserById.ts","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","generateNewId","ids","Math","max","getUserById","usersFromServer","find","initialTodos","todosFromServer","App","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","setTodos","handleReset","action","method","onSubmit","event","preventDefault","trim","prevTodos","onReset","htmlFor","type","placeholder","value","onChange","target","required","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec7bb1a4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../Types/User';\nimport './UserInfo.scss';\n\ninterface UserInfoProps {\n  user: User;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\nimport './TodoInfo.scss';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed = true,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n      key={id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n\n  );\n};\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../Types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import { Todos } from '../Types/Todo';\n\nexport const generateNewId = (todos: Todos): number => {\n  const ids = todos.map(todo => todo.id);\n  const maxId = Math.max(...ids);\n\n  return maxId + 1;\n};\n","import usersFromServer from '../../api/users';\nimport { User } from '../Types/User'; // Assuming there is a 'User' type defined in './types'\n\nexport const getUserById = (id: number) => {\n  return usersFromServer.find((user: User) => user.id === id);\n};\n","import React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { generateNewId } from './components/utils/generateNewId';\nimport { getUserById } from './components/utils/getUserById';\nimport { Todos } from './components/Types/Todo';\nimport './App.scss';\n\nconst initialTodos: Todos = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState<string>('');\n  const [hasTitleError, setHasTitleError] = useState<boolean>(false);\n\n  const [userId, setUserId] = useState<number>(0);\n  const [hasUserIdError, setHasUserIdError] = useState<boolean>(false);\n\n  const [todos, setTodos] = useState<Todos>(initialTodos);\n\n  function handleReset() {\n    setTitle('');\n    setUserId(0);\n\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  }\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    setTodos((prevTodos) => [...prevTodos, {\n      id: generateNewId(todosFromServer),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    }]);\n\n    handleReset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n        onReset={handleReset}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title:</label>\n\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User:</label>\n\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            required\n            // defaultValue={userId}\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\">\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}